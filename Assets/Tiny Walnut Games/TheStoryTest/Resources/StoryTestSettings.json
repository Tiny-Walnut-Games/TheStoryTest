{
  "projectName": "YourProjectName",
  "menuPath": "Tiny Walnut Games/The Story Test/",
  "assemblyFilters": [],
  "includeUnityAssemblies": false,
  "validateOnStart": false,
  "strictMode": false,
  "exportPath": ".debug/storytest_report.txt",
  
  "conceptualValidation": {
    "enableConceptTests": true,
    "autoDetectEnvironment": true,
    "validationTiers": {
      "universal": true,
      "unityAware": true,
      "projectSpecific": false
    },
    "environmentCapabilities": {
      "hasUnityEngine": false,
      "hasDOTS": false,
      "hasBurst": false,
      "hasEntities": false,
      "canInstantiateComponents": false
    },
    "customComponentTypes": [],
    "enumValidationPatterns": [],
    "fallbackMode": "ilAnalysis"
  },
  
  "comments": {
    "projectName": "The name of your project - used for folder structure validation and reporting",
    "menuPath": "Unity Editor menu path for Story Test tools. Must end with '/'",
    "assemblyFilters": "Array of assembly name patterns to validate. Empty array = validate all project assemblies",
    "includeUnityAssemblies": "Set to true to validate Unity engine assemblies (not recommended)",
    "validateOnStart": "Automatically run validation when ProductionExcellenceStoryTest MonoBehaviour starts",
    "strictMode": "Enable strict validation mode with stricter rules",
    "exportPath": "Path where validation reports are exported (relative to project root)",
    "conceptualValidation": {
      "enableConceptTests": "Enable high-level conceptual validation beyond the core 9 Acts",
      "autoDetectEnvironment": "Automatically detect Unity, DOTS, Burst capabilities at runtime",
      "validationTiers": {
        "universal": "Core Acts 1-9 validation (works in ANY .NET project)",
        "unityAware": "Unity-specific validation (GameObject patterns, MonoBehaviour usage)",
        "projectSpecific": "Custom validation defined in customComponentTypes"
      },
      "environmentCapabilities": {
        "hasUnityEngine": "Auto-detected: UnityEngine assembly available",
        "hasDOTS": "Auto-detected: Unity.Entities assembly available",
        "hasBurst": "Auto-detected: Unity.Burst assembly available",
        "hasEntities": "Auto-detected: Unity.Entities assembly available",
        "canInstantiateComponents": "Auto-detected: Runtime component instantiation possible"
      },
      "customComponentTypes": "Array of fully qualified type names to validate (e.g., 'MyNamespace.MyComponent')",
      "enumValidationPatterns": "Array of enum name patterns to validate beyond Act8's generic rules",
      "fallbackMode": "Validation mode when instantiation fails: 'ilAnalysis' or 'skip'"
    }
  }
}
